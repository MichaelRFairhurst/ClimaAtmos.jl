env:
  JULIA_VERSION: "1.7.1"
  MPICH_VERSION: "4.0.0"
  OPENMPI_VERSION: "4.1.1"
  CUDA_VERSION: "11.2"
  OPENBLAS_NUM_THREADS: 1
  CLIMATEMACHINE_SETTINGS_FIX_RNG_SEED: "true"
  BUILDKITE_COMMIT: "${BUILDKITE_COMMIT}"
  BUILDKITE_BRANCH: "${BUILDKITE_BRANCH}"
  JULIA_DEPOT_PATH: "${BUILDKITE_BUILD_PATH}/${BUILDKITE_PIPELINE_SLUG}/depot/cpu"

agents:
  config: cpu
  queue: central
  slurm_ntasks: 1

steps:
  - label: "init :computer:"
    key: "init_cpu_env"
    command:
      - "echo $$JULIA_DEPOT_PATH"
      - "julia --project -e 'using Pkg; Pkg.instantiate(;verbose=true)'"
      - "julia --project -e 'using Pkg; Pkg.precompile()'"
      - "julia --project -e 'using Pkg; Pkg.status()'"

      - "julia --project=test -e 'using Pkg; Pkg.develop(path = \".\")'"
      - "julia --project=test -e 'using Pkg; Pkg.instantiate(;verbose=true)'"
      - "julia --project=test -e 'using Pkg; Pkg.precompile()'"
      - "julia --project=test -e 'using Pkg; Pkg.status()'"

      - "julia --project=examples -e 'using Pkg; Pkg.instantiate(;verbose=true)'"
      - "julia --project=examples -e 'using Pkg; Pkg.precompile()'"
      - "julia --project=examples -e 'using Pkg; Pkg.status()'"

      - "julia --project=perf -e 'using Pkg; Pkg.instantiate(;verbose=true)'"
      - "julia --project=perf -e 'using Pkg; Pkg.precompile()'"
      - "julia --project=perf -e 'using Pkg; Pkg.status()'"

    agents:
      slurm_cpus_per_task: 8
    env:
      JULIA_NUM_PRECOMPILE_TASKS: 8

  - wait

  - group: "ClimaAtmos src unit tests"
    steps:

      - label: ":computer: domains"
        command: "julia --color=yes --project=test test/test_domains.jl"

      - label: ":computer: models"
        command: "julia --color=yes --project=test test/test_models.jl"

  - group: "ClimaAtmos src integration tests"
    steps:

      - label: ":computer: 1d_ekman_column regression (Float32)"
        command: "julia --color=yes --project=test test/test_cases/run_1d_ekman_column.jl --FT Float32 --test_mode regression"

      - label: ":computer: 1d_ekman_column regression (Float64)"
        command: "julia --color=yes --project=test test/test_cases/run_1d_ekman_column.jl --FT Float64 --test_mode regression"

      - label: ":computer: 1d_ekman_column validation"
        command: "julia --color=yes --project=test test/test_cases/run_1d_ekman_column.jl --FT Float64 --test_mode validation"
        artifact_paths: "test/test_cases/run_1d_ekman_column/*"

      - label: ":computer: 2d_dry_bubble"
        command: "julia --color=yes --project=test test/test_cases/run_2d_dry_bubble.jl"
        artifact_paths: "test/test_cases/run_2d_dry_bubble/*"

      - label: ":computer: 2d_moist_bubble"
        command: "julia --color=yes --project=test test/test_cases/run_2d_moist_bubble.jl"
        artifact_paths: "test/test_cases/run_2d_moist_bubble/*"

      - label: ":computer: 2d_precipitating_bubble"
        command: "julia --color=yes --project=test test/test_cases/run_2d_precipitating_bubble.jl"
        artifact_paths: "test/test_cases/run_2d_precipitating_bubble/*"

      - label: ":computer: 3d_rising_bubble"
        command: "julia --color=yes --project=test test/test_cases/run_3d_rising_bubble.jl"
        artifact_paths: "test/test_cases/run_3d_rising_bubble/*"

      - label: ":computer: 3d_solid_body_rotation"
        command: "julia --color=yes --project=test test/test_cases/run_3d_solid_body_rotation.jl"
        artifact_paths: "test/test_cases/run_3d_solid_body_rotation/*"

      - label: ":computer: 3d_balanced_flow"
        command: "julia --color=yes --project=test test/test_cases/run_3d_balanced_flow.jl"
        artifact_paths: "test/test_cases/run_3d_balanced_flow/*"

      - label: ":computer: 3d_baroclinic_wave"
        command: "julia --color=yes --project=test test/test_cases/run_3d_baroclinic_wave.jl"
        artifact_paths: "test/test_cases/run_3d_baroclinic_wave/*"

  - group: "Box Examples"
    steps:

      - label: ":package: Single column physics - EDMF"
        command: "julia --color=yes --project=examples examples/TCexample.jl"
        artifact_paths: "examples/output/TCexample/*"

  - group: "MPI Examples"
    steps:

      - label: ":computer: MPI baroclinic wave (ρe)"
        command: "mpiexec julia --color=yes --project=examples examples/hybrid/driver.jl --job_id mpi_baroclinic_wave_rhoe"
        artifact_paths: "mpi_baroclinic_wave_rhoe/*"
        env:
          CLIMACORE_DISTRIBUTED: "MPI"
        agents:
          slurm_ntasks: 2

  - group: "Sphere Examples"
    steps:

      - label: ":computer: baroclinic wave (ρe) Float64"
        command: "julia --color=yes --project=examples examples/hybrid/driver.jl --FLOAT_TYPE Float64 --job_id sphere_baroclinic_wave_rhoe_Float64"
        artifact_paths: "sphere_baroclinic_wave_rhoe_Float64/*"

      - label: ":computer: baroclinic wave (ρθ) Float64"
        command: "julia --color=yes --project=examples examples/hybrid/driver.jl --energy_name rhotheta --FLOAT_TYPE Float64 --job_id sphere_baroclinic_wave_rhotheta_Float64"
        artifact_paths: "sphere_baroclinic_wave_rhotheta_Float64/*"

      - label: ":computer: held suarez (ρθ)"
        command: "julia --color=yes --project=examples examples/hybrid/driver.jl --energy_name rhotheta --forcing held_suarez --job_id sphere_held_suarez_rhotheta --regression_test true"
        artifact_paths: "sphere_held_suarez_rhotheta/*"

      - label: ":computer: held suarez (ρe) equilmoist"
        command: "julia --color=yes --project=examples examples/hybrid/driver.jl --vert_diff true --moist equil --forcing held_suarez --microphy 0M --job_id sphere_held_suarez_rhoe_equilmoist --regression_test true --dt 200secs --t_end 5days"
        artifact_paths: "sphere_held_suarez_rhoe_equilmoist/*"

      - label: ":computer: held suarez (ρe_int) equilmoist"
        command: "julia --color=yes --project=examples examples/hybrid/driver.jl --vert_diff true --energy_name rhoe_int --forcing held_suarez --moist equil --microphy 0M --job_id sphere_held_suarez_rhoe_int_equilmoist --regression_test true --dt 200secs --t_end 5days"
        artifact_paths: "sphere_held_suarez_rhoe_int_equilmoist/*"

  - group: "Milestones"
    steps:

      - label: ":computer: single column radiative equilibrium"
        command: "julia --color=yes --project=examples examples/hybrid/driver.jl --rad clearsky --idealized_h2o true --hyperdiff false --config column --t_end 654days --dt 3hours --dt_save_to_sol 30hours --job_id sphere_single_column_radiative_equilibrium"
        artifact_paths: "sphere_single_column_radiative_equilibrium/*"

      - label: ":computer: baroclinic wave (ρe)"
        command: "julia --color=yes --project=examples examples/hybrid/driver.jl --job_id sphere_baroclinic_wave_rhoe --regression_test true"
        artifact_paths: "sphere_baroclinic_wave_rhoe/*"

      - label: ":computer: baroclinic wave (ρe) equilmoist"
        command: "julia --color=yes --project=examples examples/hybrid/driver.jl --moist equil --microphy 0M --job_id sphere_baroclinic_wave_rhoe_equilmoist --regression_test true --dt 300secs"
        artifact_paths: "sphere_baroclinic_wave_rhoe_equilmoist/*"

      - label: ":computer: baroclinic wave (ρe) equilmoist radiation"
        command: "julia --color=yes --project=examples examples/hybrid/driver.jl --moist equil --microphy 0M --rad clearsky --job_id sphere_baroclinic_wave_rhoe_equilmoist_radiation --dt 200secs --t_end 5days"
        artifact_paths: "sphere_baroclinic_wave_rhoe_equilmoist_radiation/*"

      - label: ":computer: held suarez (ρe)"
        command: "julia --color=yes --project=examples examples/hybrid/driver.jl --forcing held_suarez --job_id sphere_held_suarez_rhoe --regression_test true"
        artifact_paths: "sphere_held_suarez_rhoe/*"

      - label: ":computer: held suarez (ρe_int)"
        command: "julia --color=yes --project=examples examples/hybrid/driver.jl --forcing held_suarez --energy_name rhoe_int --job_id sphere_held_suarez_rhoe_int --regression_test true"
        artifact_paths: "sphere_held_suarez_rhoe_int/*"

  - group: "Performance"
    steps:

      - label: ":rocket: flame graph: baroclinic wave (ρe)"
        command: "julia --color=yes --project=perf perf/flame.jl --job_id flame_sphere_baroclinic_wave_rhoe"
        artifact_paths: "flame_sphere_baroclinic_wave_rhoe/*"
        env:
          CI_PERF_CPUPROFILE: "true"

      - label: ":rocket: benchmark: baroclinic wave (ρe)"
        command: "julia --color=yes --project=perf perf/benchmark.jl --job_id bm_sphere_baroclinic_wave_rhoe"
        env:
          CI_PERF_CPUPROFILE: "true"

      - label: ":mag: Allocations: baroclinic wave (ρe)"
        command: "julia --color=yes --project=perf perf/allocs.jl"
        env:
          CI_PERF_CPUPROFILE: "true"

  - wait: ~
    continue_on_failure: true

  - label: ":robot_face: Print new mse tables"
    command: "julia --color=yes --project=examples post_processing/print_new_mse.jl"

  - label: ":robot_face: Print new reference counter"
    command: "julia --color=yes --project=examples post_processing/print_new_ref_counter.jl"

  - wait

  - label: ":robot_face: Move main results"
    command: "julia --color=yes --project=examples post_processing/move_output.jl"
